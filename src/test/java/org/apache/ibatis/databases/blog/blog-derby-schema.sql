--
--    Copyright 2009-2016 the original author or authors.
--
--    Licensed under the Apache License, Version 2.0 (the "License");
--    you may not use this file except in compliance with the License.
--    You may obtain a copy of the License at
--
--       http://www.apache.org/licenses/LICENSE-2.0
--
--    Unless required by applicable law or agreed to in writing, software
--    distributed under the License is distributed on an "AS IS" BASIS,
--    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--    See the License for the specific language governing permissions and
--    limitations under the License.
--

# DROP TABLE comment;
# DROP TABLE post_tag;
# DROP TABLE tag;
DROP TABLE post;
DROP TABLE blog;
DROP TABLE author;
# DROP PROCEDURE selectTwoSetsOfAuthors;
# DROP PROCEDURE insertAuthor;
# DROP PROCEDURE selectAuthorViaOutParams;

-- author definition
CREATE TABLE IF NOT EXISTS `author` (
        `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id自增',
        `name` varchar(16) DEFAULT NULL,
        `password` varchar(16) DEFAULT NULL,
        `email` varchar(16) DEFAULT NULL,
        `bio` varchar(16) DEFAULT NULL,
        `favourite_section` varchar(16) DEFAULT NULL,
        PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE blog (
    `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id自增',
    author_id   int(11) unsigned NOT NULL,
    title       VARCHAR(255),
    PRIMARY KEY (id)
)  ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE post (
    `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id自增',
    `blog_id`     int(11) unsigned NOT NULL,
    `author_id`   int(11) unsigned NOT NULL,
    `created_on`  TIMESTAMP NOT NULL,
    `section`     VARCHAR(25) NOT NULL,
    `subject`     VARCHAR(255) NOT NULL,
    `body`        text NOT NULL,
    `draft`       int(11) unsigned NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (blog_id) REFERENCES blog(id)
);

#
#     CREATE TABLE tag (
#     id          INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
#     name        VARCHAR(255) NOT NULL,
#     PRIMARY KEY (id)
#     );
#
#     CREATE TABLE post_tag (
#     post_id     INT NOT NULL,
#     tag_id      INT NOT NULL,
#     PRIMARY KEY (post_id, tag_id)
#     );
#
#     CREATE TABLE comment (
#     id          INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
#     post_id     INT NOT NULL,
#     name        LONG VARCHAR NOT NULL,
#     comment     LONG VARCHAR NOT NULL,
#     PRIMARY KEY (id)
#     );
#
#     CREATE TABLE node (
#     id  INT NOT NULL,
#     parent_id INT,
#     PRIMARY KEY(id)
#     );
#
#     CREATE PROCEDURE selectTwoSetsOfAuthors(DP1 INTEGER, DP2 INTEGER)
#     PARAMETER STYLE JAVA
#     LANGUAGE JAVA
#     READS SQL DATA
#     DYNAMIC RESULT SETS 2
#     EXTERNAL NAME 'org.apache.ibatis.databases.blog.StoredProcedures.selectTwoSetsOfTwoAuthors';
#
#     CREATE PROCEDURE insertAuthor(DP1 INTEGER, DP2 VARCHAR(255), DP3 VARCHAR(255), DP4 VARCHAR(255))
#     PARAMETER STYLE JAVA
#     LANGUAGE JAVA
#     EXTERNAL NAME 'org.apache.ibatis.databases.blog.StoredProcedures.insertAuthor';
#
#     CREATE PROCEDURE selectAuthorViaOutParams(ID INTEGER, OUT USERNAME VARCHAR(255), OUT PASSWORD VARCHAR(255), OUT EMAIL VARCHAR(255), OUT BIO VARCHAR(255))
#     PARAMETER STYLE JAVA
#     LANGUAGE JAVA
#     EXTERNAL NAME 'org.apache.ibatis.databases.blog.StoredProcedures.selectAuthorViaOutParams';
